from machine import Pin, SPI
from GolanDisplay import GolanDisplay  # Import the GolanDisplay class
from ili9341 import color565
import time
import neopixel

# NeoPixel setup
NEO_PIN = 22  # Using GPIO22 for NeoPixel control
NUM_LEDS = 4  # Adjust number of LEDs in your strip
colors = [
    (255, 20, 147),  # HOT_PINK
    (0, 255, 255),   # AQUA
    (0, 255, 0),     # LIME
    (238, 130, 238), # VIOLET
    (255, 165, 0)    # ORANGE
]

# LED control class
class LEDControl:
    def __init__(self, pin, num_leds):
        self.pin = Pin(pin, Pin.OUT)
        self.num_leds = num_leds
        self.np = neopixel.NeoPixel(self.pin, self.num_leds)
        self.current_led = 0

    def moving_colors(self):
        for i in range(self.num_leds):
            color_idx = (self.current_led + i) % len(colors)
            self.np[i] = colors[color_idx]
        self.np.write()
        self.current_led = (self.current_led + 1) % self.num_leds
        time.sleep(0.2)

# Motor control class
class SimpleMotor:
    def __init__(self, in1_pin, in2_pin, led_pin):
        self.in1 = Pin(in1_pin, Pin.OUT)
        self.in2 = Pin(in2_pin, Pin.OUT)
        self.led = Pin(led_pin, Pin.OUT)

    def motgo(self, speed):
        if speed > 0:
            self.in1.value(1)
            self.in2.value(0)
        elif speed < 0:
            self.in1.value(0)
            self.in2.value(1)
        else:
            self.in1.value(0)
            self.in2.value(0)

    def move_for_time(self, speed, duration):
        self.led.value(1)
        try:
            self.motgo(speed)
            time.sleep(duration)
        finally:
            self.motgo(0)
            self.led.value(0)

def run_golan_display():
    spi = SPI(1, baudrate=33000000, sck=Pin(18), mosi=Pin(23), miso=Pin(19))
    cs = Pin(5)
    dc = Pin(25)
    rst = Pin(33)
    golan_display = GolanDisplay(spi, cs, dc, rst)
    golan_display.display_start_screen()
    golan_display.run_animation()

def run_motor_and_led():
    in1_pin = 4
    in2_pin = 13
    led_pin = 2
    button_pin = 12
    quit_button_pin = 14

    button = Pin(button_pin, Pin.IN, Pin.PULL_UP)  # שינוי ל-PULL_UP
    quit_button = Pin(quit_button_pin, Pin.IN, Pin.PULL_DOWN)
    motor = SimpleMotor(in1_pin, in2_pin, led_pin)
    led_control = LEDControl(NEO_PIN, NUM_LEDS)

    move_right = True
    print("Press the green button to move the motor. Press the red quit button to stop the program.")

    while True:
        led_control.moving_colors()

        if quit_button.value() == 1:
            print("Quit button pressed. Exiting motor control.")
            break

        if button.value() == 0:  # עדכון ללחיצה ב-PULL_UP
            if move_right:
                motor.move_for_time(1, 0.111)
            else:
                motor.move_for_time(-1, 0.111)
            move_right = not move_right
            time.sleep(0.3)

def main():
    # Run both programs independently
    from _thread import start_new_thread

    # Start Golan display in a separate thread
    start_new_thread(run_golan_display, ())

    # Run motor and LED in the main thread
    run_motor_and_led()

if __name__ == "__main__":
    main()
